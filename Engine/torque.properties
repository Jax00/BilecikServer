# The name of the project Torque will generate code for.
  torque.project = bilecik

  # The target database platform.
  torque.database = postgresql
  
  # The target package to put the generated classes in.
  torque.targetPackage = pl.jax.sawik.database

  torque.subpackage.peer = obj
  torque.subpackage.object = obj
  torque.subpackage.map = gen.map
  torque.subpackage.manager = gen.manager
  torque.subpackage.base = gen.base
  
  # The JDBC URL that Torque can use to create and
  # drop databases if instructed to do so.
  torque.database.createUrl = jdbc:postgresql://192.168.0.4:5432/

  # The JDBC URL that will be used to create tables in your database.
  torque.database.buildUrl = jdbc:postgresql://192.168.0.4:5432/bilecik

  # The JDBC URL that will be used to access your database.
  torque.database.url = jdbc:postgresql://192.168.0.4:5432/bilecik

  # The JDBC database driver to use when connecting to your database.
  torque.database.driver = org.postgresql.Driver

  # The administrative username that has sufficient privileges to create
  # and drop databases and tables that Torque executes at generation time.
  torque.database.user = postgres

  # The administrative password for the supplied username.
  torque.database.password = postgres

  # The hostname or IP address of your database server.
  torque.database.host = 192.168.0.4:5432
  
  torque.schema.dir = schema
  
  torque.output.dir = gen
  
  torque.java.dir = src
  
  torque.useClasspath = true
  
  torque.enableJava5Features = true
  
  #torque.java.dir = ./../KancelariaWIP/src
  #torque.java.base.dir = ./src